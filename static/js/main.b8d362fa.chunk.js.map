{"version":3,"sources":["containers/withHeader.js","containers/PrivateRoute.js","actionTypes.js","actions.js","components/Card.js","components/Title.js","components/Label.js","components/SectionLabel.js","components/HorizontalList.js","components/SectionTitle.js","components/Poll.js","components/PollList.js","components/Menu.js","components/DropdownMenu.js","components/HeaderProfile.js","components/HeaderDropdownMenu.js","components/SelectProfileDropdownMenu.js","components/FilterToggle.js","components/PollsSection.js","components/PlayerScoreCard.js","components/Answer.js","components/QuestionInput.js","components/AddQuestionButton.js","components/LatestPollsSection.js","components/TopPlayersSection.js","components/ChooseProfileButton.js","components/FloatingActionButton.js","components/InputCardSeparator.js","components/Question.js","components/MyAnswersSection.js","components/Header.js","containers/SignInPage.js","hooks.js","containers/AddNewPollPage.js","containers/PollDetailPage.js","containers/ConnectedHeader.js","containers/HomePage.js","containers/LeaderboardPage.js","containers/PollsPage.js","containers/ConnectedPollsList.js","containers/FloatingAddQuestionButton.js","containers/AppContainer.js","reducers/scoreboardReducer.js","reducers/topPlayersReducer.js","reducers/latestPollsReducer.js","reducers/pollsReducer.js","reducers/authenticationReducer.js","reducers/answersReducer.js","reducers/pageReducer.js","_DATA.js","api.js","sagas.js","reducers/index.js","App.js","serviceWorker.js","index.js","icons/circle-check.svg","icons/polls.svg","icons/add.svg","icons/scoreboard.svg","icons/down-arrow.svg","icons/help.svg","icons/check.svg"],"names":["withHeader","Component","props","ConnectedHeader","connect","authenticatedUser","authentication","currentUser","component","routeProps","isAuthenticated","render","to","pathname","state","from","location","ANSWER_POLL_SUCCESS","REFRESH_TOP_SCORES","RESET_SCOREBOARD","RESET_POLLS","REFRESH_LATEST_POLLS","ADD_NEW_USER","ADD_NEW_POLL","LOGOUT","SAVE_PROFILE","SELECT_PROFILE","SIGN_IN","SELECT_OPTION","SELECT_POLL","SET_HEADER","SET_POLLS","SET_USER_PROFILES","FINISH_LOADING","CHANGE_FILTER","answerPollSuccessAction","selectedOption","poll","userId","type","payload","refreshTopScoresAction","players","refreshLatestPollsAction","polls","Object","values","addNewUserAction","newUser","user","addNewPollAction","saveProfileAction","profile","signInAction","selectPollAction","pollId","finishInitializationAction","Wrapper","styled","div","Card","children","otherProps","h1","span","Label","Title","Text","CreationInformation","Poll","className","options","createdBy","creationDate","playerFirstName","playerName","split","question","join","creationTimeInformation","formatDistance","Date","addSuffix","VerticalList","VerticalPollClickableWrapper","button","HorizontalPollClickableWrapper","CenteredWrapper","HorizontallyStyledPoll","VerticallyStyledPoll","EmptyList","src","pollsIcon","alt","PollList","onClickPoll","isHorizontal","isEmpty","length","HorizontalList","map","p","index","key","onClick","defaultProps","List","ul","ListItem","li","Menu","items","onClickItem","i","label","DefaultMenu","DropdownMenu","ToggleComponent","MenuComponent","useState","isShowing","setIsShowing","StyledMenu","style","position","display","ProfilePicture","img","ProfileName","HeaderProfile","picture","name","firstName","StyledDropdownMenu","HeaderDropdownMenu","onLogOut","playerPicture","ProfileButton","SelectProfileDropdownMenu","profiles","onProfileSelected","menuItems","id","isActive","FilterToggle","onToggle","SectionHeader","FilterWrapper","PollsSection","selectedFilter","onChangeFilter","SectionTitle","isVertical","css","PlayerInformationWrapper","PollStatisticsWrapper","ScoreInformationWrapper","ScoreWrapper","PlayerName","ScoreNumber","big","PlayerScoreCard","pollsCreated","pollsAnswered","input","AddQuestionButton","FloatingActionButton","icon","addIcon","StyledPlayerScoreCard","AlignedSectionTitle","ViewScoreboardClickableWrapper","EmptyListTitle","h4","EmptySection","scoreboardIcon","TopPlayersSection","onClickOpenLeaderboard","SectionLabel","Icon","buttonProps","helpIcon","Separator","SeparatorWrapper","SeparatorSpan","QuestionOption","isSelected","QuestionOptionClickableContainer","Question","optionSelected","onSelectOption","option1","option2","isOption1Selected","isOption2Selected","isAnswered","circleCheckIcon","disabled","StyledAnswer","AnswerWrapper","MyAnswersSection","answers","a","StyledSectionTitle","Header","title","SubTitle","SignInPage","savedProfiles","onSelectProfile","selectedProfile","dispatch","selectProfileAction","useHeader","useDispatch","useEffect","setHeaderAction","disabledButton","SaveNewPollButton","InputWrapper","OptionInput","history","onAddNewPoll","newPoll","push","optionA","setOptionA","optionB","setOptionB","isValidPoll","placeholder","value","onChange","e","target","checkIcon","uuid","now","StyledLabel","all","selected","r","userCount","answerCount","option","selectOptionAction","goBack","answerRate","toFixed","page","current","topPlayers","tp","latestPolls","lp","currentUserAnswers","onOpenPoll","onOpenLeaderboard","onOpenPolls","ConnectedPollsList","calculateScore","s","scoreboard","scores","isNotAnsweredBy","inflateUserProfile","filter","changeFilterAction","FloatingAddQuestionButton","propTypes","NotFound","Router","LoaderWrapper","HashRouter","isInitialized","path","HomePage","exact","PollsPage","AddNewPollPage","PollDetailPage","LeaderboardPage","loading","color","INITIAL","scoreboardReducer","action","score","x","topPlayersReducer","entries","sort","b","slice","latestPollsReducer","pollsReducer","GUEST_PROFILE","authenticationReducer","answersReducer","answer","pageReducer","users","sarahedo","avatarURL","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","mapApiQuestionVotesToAppPollAnswers","v","mapApiQuestionToAppPoll","getPolls","Promise","res","rej","setTimeout","then","mapApiUserToAppUserProfile","getUserProfiles","initialSaga","refreshTopScoresSaga","refreshLatestPollsSaga","fetchInitialPollsSaga","fetchInitialUserProfilesSaga","signInSaga","watchAddNewUserSaga","watchAddNewPoll","watchSelectProfile","watchSetPolls","watchSetUserProfiles","addAnswerToScoreSaga","watchSelectOption","rootSaga","put","select","call","api","takeEvery","selectedPollId","currentUserId","store","sagaMiddleware","createSagaMiddleware","createRootStore","combineReducers","compose","applyMiddleware","createLogger","run","createStore","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b8d362fa.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport { ConnectedHeader } from './index';\n\nexport default function withHeader(Component) {\n  return (props) => {\n    return (\n      <Fragment>\n        <ConnectedHeader />\n        <Component {...props} />\n      </Fragment>\n    );\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\n\nfunction PrivateRoute({\n  component: Component,\n  authenticatedUser,\n  ...routeProps\n}) {\n  const isAuthenticated = !!authenticatedUser;\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/authenticate',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = ({ authentication }) => ({\n  authenticatedUser: authentication.currentUser\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","export const RETRIEVE_TOP_PLAYERS_REQUEST = 'RETRIEVE_TOP_PLAYERS_REQUEST';\nexport const RETRIEVE_TOP_PLAYERS_SUCCESS = 'RETRIEVE_TOP_PLAYERS_SUCCESS';\nexport const RETRIEVE_TOP_PLAYERS_FAILURE = 'RETRIEVE_TOP_PLAYERS_FAILURE';\n\nexport const RETRIEVE_LATEST_POLLS_REQUEST = 'RETRIEVE_LATEST_POLLS_REQUEST';\nexport const RETRIEVE_LATEST_POLLS_SUCCESS = 'RETRIEVE_LATEST_POLLS_SUCCESS';\nexport const RETRIEVE_LATEST_POLLS_FAILURE = 'RETRIEVE_LATEST_POLLS_FAILURE';\n\nexport const CREATE_POLL_REQUEST = 'CREATE_POLL_REQUEST';\nexport const CREATE_POLL_SUCCESS = 'CREATE_POLL_SUCCESS';\n\nexport const ANSWER_POLL_REQUEST = 'ANSWER_POLL_REQUEST';\nexport const ANSWER_POLL_SUCCESS = 'ANSWER_POLL_SUCCESS';\n\nexport const REFRESH_TOP_SCORES = 'REFRESH_TOP_SCORES';\n\nexport const RESET_SCOREBOARD = 'RESET_SCOREBOARD';\n\nexport const RESET_POLLS = 'RESET_POLLS';\n\nexport const REFRESH_LATEST_POLLS = 'REFRESH_LATEST_POLLS';\n\nexport const ADD_NEW_USER = 'ADD_NEW_USER';\n\nexport const ADD_NEW_POLL = 'ADD_NEW_POLL';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const SAVE_PROFILE = 'SAVE_PROFILE';\n\nexport const SELECT_PROFILE = 'SELECT_PROFILE';\n\nexport const SIGN_IN = 'SIGN_IN';\n\nexport const ANSWER_POLL = 'ANSWER_POLL';\n\nexport const SELECT_OPTION = 'SELECT_OPTION';\n\nexport const SELECT_POLL = 'SELECT_POLL';\n\nexport const SET_HEADER = 'SET_HEADER';\n\nexport const SET_POLLS = 'SET_POLLS';\n\nexport const SET_USER_PROFILES = 'SET_USER_PROFILES';\n\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n","import {\n  ANSWER_POLL_SUCCESS,\n  CREATE_POLL_SUCCESS,\n  REFRESH_TOP_SCORES,\n  RESET_SCOREBOARD,\n  RETRIEVE_TOP_PLAYERS_FAILURE,\n  RETRIEVE_TOP_PLAYERS_REQUEST,\n  RETRIEVE_TOP_PLAYERS_SUCCESS,\n  RESET_POLLS,\n  REFRESH_LATEST_POLLS,\n  ADD_NEW_USER,\n  ADD_NEW_POLL,\n  SELECT_PROFILE,\n  SAVE_PROFILE,\n  SIGN_IN,\n  SELECT_OPTION,\n  SELECT_POLL,\n  SET_HEADER,\n  LOGOUT,\n  SET_POLLS,\n  SET_USER_PROFILES,\n  FINISH_LOADING,\n  CHANGE_FILTER\n} from './actionTypes';\n\nexport const retrieveTopPlayersAction = () => ({\n  type: RETRIEVE_TOP_PLAYERS_REQUEST\n});\n\nexport const retrieveToPlayersFailureAction = error => ({\n  type: RETRIEVE_TOP_PLAYERS_FAILURE,\n  payload: { error }\n});\n\nexport const retrieveTopPlayersSuccessAction = players => ({\n  type: RETRIEVE_TOP_PLAYERS_SUCCESS,\n  payload: { players }\n});\n\nexport const createPollSuccessAction = poll => ({\n  type: CREATE_POLL_SUCCESS,\n  payload: { poll }\n});\n\nexport const answerPollSuccessAction = ({ selectedOption, poll, userId }) => ({\n  type: ANSWER_POLL_SUCCESS,\n  payload: { selectedOption, poll, userId }\n});\n\nexport const refreshTopScoresAction = players => ({\n  type: REFRESH_TOP_SCORES,\n  payload: { players }\n});\n\nexport const resetScoreboardAction = () => ({\n  type: RESET_SCOREBOARD\n});\n\nexport const resetPolls = () => ({\n  type: RESET_POLLS\n});\n\nexport const refreshLatestPollsAction = polls => ({\n  type: REFRESH_LATEST_POLLS,\n  payload: {\n    polls: Object.values(polls)\n  }\n});\n\nexport const addNewUserAction = newUser => ({\n  type: ADD_NEW_USER,\n  payload: {\n    user: newUser\n  }\n});\n\nexport const addNewPollAction = poll => ({\n  type: ADD_NEW_POLL,\n  payload: { poll }\n});\n\nexport const selectProfileAction = id => ({\n  type: SELECT_PROFILE,\n  payload: { id }\n});\n\nexport const saveProfileAction = profile => ({\n  type: SAVE_PROFILE,\n  payload: { profile }\n});\n\nexport const signInAction = user => ({\n  type: SIGN_IN,\n  payload: { user }\n});\n\nexport const selectOptionAction = (index, user) => ({\n  type: SELECT_OPTION,\n  payload: {\n    option: index,\n    user\n  }\n});\n\nexport const selectPollAction = pollId => ({\n  type: SELECT_POLL,\n  payload: pollId\n});\n\nexport const setHeaderAction = title => ({\n  type: SET_HEADER,\n  payload: title\n});\n\nexport const logOutAction = () => ({\n  type: LOGOUT\n});\n\nexport const setPollsAction = polls => ({\n  type: SET_POLLS,\n  payload: { polls }\n});\n\nexport const setUserProfilesAction = profiles => ({\n  type: SET_USER_PROFILES,\n  payload: { profiles }\n});\n\nexport const finishInitializationAction = () => ({\n  type: FINISH_LOADING\n});\n\nexport const changeFilterAction = filter => ({\n  type: CHANGE_FILTER,\n  payload: filter\n});\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 4px 0;\n  border-radius: 4px;\n  background-color: #fff;\n`;\n\nexport default function Card({ children, ...otherProps }) {\n  return <Wrapper {...otherProps}>{children}</Wrapper>;\n}\n","import styled from 'styled-components';\n\nexport default styled.h1`\n  color: #4A4A4A;\n  font-size: 24px;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: 300;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport default styled.span`\n  text-transform: uppercase;\n  color: #4A4A4A;\n  font-size: 8px;\n  font-family: \"Open Sans\", sans-serif;\n`;\n","import styled from 'styled-components';\n\nimport { Label } from './index';\n\nexport default styled(Label)`\n  margin-top: 24px;\n  font-size: 10px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n  overflow-x: scroll;\n  padding: 4px;\n  margin: -4px;\n  align-items: flex-start;\n`;\n","import styled from 'styled-components';\nimport { Title } from './index';\n\nexport default styled(Title)`\n  margin-top: 24px;\n  margin-bottom: 6px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\n\nimport { Card, Label } from './index';\n\nconst Wrapper = styled(Card)`\n  padding: 12px;\n  flex-direction: column;\n  display: inline-flex;\n  max-width: 300px;\n`;\n\nconst Text = styled.h1`\n  font-family: 'Open Sans', sans-serif;\n  font-size: 28px;\n  font-weight: lighter;\n  padding-bottom: 6px;\n  margin: 0 0 6px 0;\n  border-bottom: 1px solid rgba(151, 151, 151, 0.1);\n`;\n\nconst CreationInformation = styled(Label)`\n  align-self: flex-end;\n  flex: 1;\n`;\n\nexport default function Poll({ className, options, createdBy, creationDate }) {\n  const playerFirstName = createdBy.playerName.split(' ')[0];\n  const question = options.join(' or ');\n  const creationTimeInformation = creationDate\n    ? formatDistance(creationDate, new Date(), { addSuffix: true })\n    : null;\n\n  return (\n    <Wrapper className={className}>\n      <Label>Would you rather...</Label>\n      <Text>{question}?</Text>\n      <CreationInformation>\n        Asked by <strong>{playerFirstName}</strong> {creationTimeInformation}\n      </CreationInformation>\n    </Wrapper>\n  );\n}\n\nPoll.propTypes = {\n  options: propTypes.arrayOf(propTypes.string).isRequired,\n  createdBy: propTypes.shape({\n    playerName: propTypes.string.isRequired\n  }).isRequired,\n  creationDate: propTypes.number\n};\n","import React, { Fragment } from 'react';\nimport * as propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport pollsIcon from '../icons/polls.svg';\n\nimport { HorizontalList, Poll, Title } from './index';\n\nconst VerticalList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst VerticalPollClickableWrapper = styled.button`\n  text-align: start;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 0;\n  margin-top: 12px;\n  &:hover {\n    outline: none;\n    cursor: pointer;\n  }\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst HorizontalPollClickableWrapper = styled.button`\n  text-align: start;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 0;\n  margin-left: 12px;\n  &:hover {\n    outline: none;\n    cursor: pointer;\n  }\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nconst CenteredWrapper = styled.div`\n  flex-direction: column;\n  display: flex;\n  flex: 1;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(187, 187, 187, 0.1);\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst HorizontallyStyledPoll = styled(Poll)`\n  min-width: 200px;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`;\n\nconst VerticallyStyledPoll = styled(Poll)`\n  display: flex;\n`;\n\nconst EmptyList = () => (\n  <CenteredWrapper>\n    <img src={pollsIcon} alt=\"Polls\" />\n    <Title>No polls found</Title>\n  </CenteredWrapper>\n);\n\nfunction PollList({ polls, onClickPoll, isHorizontal }) {\n  const isEmpty = polls.length === 0;\n\n  return (\n    <Fragment>\n      {isEmpty ? (\n        <EmptyList />\n      ) : isHorizontal ? (\n        <HorizontalList>\n          {polls.map((p, index) => (\n            <HorizontalPollClickableWrapper key={index} onClick={() => onClickPoll(p)}>\n              <HorizontallyStyledPoll {...p} />\n            </HorizontalPollClickableWrapper>\n          ))}\n        </HorizontalList>\n      ) : (\n        <VerticalList>\n          {polls.map((p, index) => (\n            <VerticalPollClickableWrapper key={index} onClick={() => onClickPoll(p)}>\n              <VerticallyStyledPoll {...p} />\n            </VerticalPollClickableWrapper>\n          ))}\n        </VerticalList>\n      )}\n    </Fragment>\n  );\n}\n\nPollList.propTypes = {\n  polls: propTypes.arrayOf(propTypes.shape(Poll.propTypes)).isRequired,\n  onClickPoll: propTypes.func,\n  isHorizontal: propTypes.bool\n};\n\nPollList.defaultProps = {\n  onClickPoll: () => {},\n  isHorizontal: false\n};\n\nexport default PollList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  background: #fff;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, .3);\n`;\n\nconst ListItem = styled.li`\n  display: inline-flex;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  background: transparent;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 12px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nfunction Menu({ className, items, onClickItem }) {\n  return (\n    <List className={className}>\n      {items.map((i, index) => (\n        <ListItem\n          key={index}\n          onClick={() => {\n            i.onClick();\n            onClickItem(i);\n          }}\n        >\n          {i.component ? <i.component /> : i.label}\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nMenu.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string,\n      component: propTypes.elementType,\n      onClick: propTypes.func.isRequired\n    })\n  ),\n  onClickItem: propTypes.func\n};\n\nMenu.defaultProps = {\n  items: [],\n  onClickItem: () => {}\n};\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Menu } from './index';\n\nexport const DefaultMenu = styled(Menu)`\n  display: flex;\n  width: 100%;\n  min-width: 100px;\n  position: absolute;\n  z-index: 1;\n`;\n\nfunction DropdownMenu({ items, className, ToggleComponent, MenuComponent }) {\n  const [isShowing, setIsShowing] = useState(false);\n  const StyledMenu = MenuComponent || DefaultMenu;\n\n  return (\n    <div\n      className={className}\n      style={{ position: 'relative', display: 'inline-block' }}\n    >\n      <ToggleComponent onClick={() => setIsShowing(!isShowing)} />\n      {isShowing && (\n        <StyledMenu items={items} onClickItem={() => setIsShowing(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default DropdownMenu;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst ProfilePicture = styled.img`\n  height: 24px;\n  width: 24px;\n  border-radius: 24px;\n  object-fit: cover;\n`;\n\nconst ProfileName = styled.span`\n  font-size: 14px;\n  margin-left: 8px;\n`;\n\nfunction HeaderProfile({ picture, name, ...otherProps }) {\n  const [firstName] = name.split(' ');\n\n  return (\n    <Wrapper {...otherProps}>\n      <ProfilePicture src={picture} alt={name} />\n      <ProfileName>{firstName}</ProfileName>\n    </Wrapper>\n  );\n}\n\nexport default HeaderProfile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { DropdownMenu, HeaderProfile } from './index';\nimport { DefaultMenu } from './DropdownMenu';\n\nconst StyledDropdownMenu = styled(DropdownMenu)`\n  min-width: 100px;\n`;\n\nconst StyledMenu = styled(DefaultMenu)``;\n\nfunction HeaderDropdownMenu({ currentUser, onLogOut }) {\n  return (\n    <StyledDropdownMenu\n      ToggleComponent={props => (\n        <HeaderProfile\n          {...props}\n          name={currentUser.playerName}\n          picture={currentUser.playerPicture}\n        />\n      )}\n      MenuComponent={StyledMenu}\n      items={[{ label: 'Log out', onClick: onLogOut }]}\n    />\n  );\n}\n\nHeaderDropdownMenu.propTypes = {\n  currentUser: propTypes.shape({\n    playerName: propTypes.string.isRequired,\n    playerPicture: propTypes.string.isRequired\n  })\n};\n\nexport default HeaderDropdownMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { DropdownMenu } from './index';\n\nconst StyledDropdownMenu = styled(DropdownMenu)`\n  width: 280px;\n`;\n\nconst ProfileButton = styled.button`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n  color: #fff;\n  outline: none;\n  height: 48px;\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: #55b000;\n  margin-top: 8px;\n  margin-right: auto;\n  border: none;\n\n  &:active,\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n`;\n\nfunction SelectProfileDropdownMenu({ profiles, onProfileSelected }) {\n  const menuItems = profiles.map(p => ({\n    label: p.playerName,\n    onClick: () => {\n      onProfileSelected(p.id);\n    }\n  }));\n\n  return (\n    <StyledDropdownMenu\n      ToggleComponent={props => (\n        <ProfileButton {...props}>Select a profile</ProfileButton>\n      )}\n      items={menuItems}\n    />\n  );\n}\n\nSelectProfileDropdownMenu.propTypes = {\n  profiles: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      playerName: propTypes.string.isRequired\n    })\n  ),\n  onProfileSelected: propTypes.func\n};\n\nSelectProfileDropdownMenu.defaultProps = {\n  onProfileSelected: () => {}\n};\n\nexport default SelectProfileDropdownMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nconst Wrapper = styled.span`\n  cursor: pointer;\n  background: ${({ isActive }) => (isActive ? '#dadada' : 'transparent')};\n  padding: 2px 6px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-transform: uppercase;\n  font-size: 10px;\n  margin-left: 2px;\n  \n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nfunction FilterToggle({ children, isActive, onToggle }) {\n  return (\n    <Wrapper isActive={isActive} onClick={onToggle}>\n      {children}\n    </Wrapper>\n  );\n}\n\nFilterToggle.propTypes = {\n  children: propTypes.elementType.isRequired,\n  isActive: propTypes.bool,\n  onToggle: propTypes.func\n};\n\nFilterToggle.defaultProps = {\n  isActive: false,\n  onToggle: () => {}\n};\n\nexport default FilterToggle;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { SectionTitle, FilterToggle, PollList } from './index';\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FilterWrapper = styled.div`\n  margin-top: 24px;\n  margin-bottom: 6px;\n  display: flex;\n  height: 100%;\n  margin-left: auto;\n`;\n\nfunction PollsSection({ polls, selectedFilter, onChangeFilter, onClickPoll }) {\n  return (\n    <Fragment>\n      <SectionHeader>\n        <SectionTitle>Polls</SectionTitle>\n        <FilterWrapper>\n          <FilterToggle\n            isActive={selectedFilter === 'UNANSWERED'}\n            onToggle={() => onChangeFilter('UNANSWERED')}\n          >\n            Pending\n          </FilterToggle>\n          <FilterToggle\n            isActive={selectedFilter === 'ANSWERED'}\n            onToggle={() => onChangeFilter('ANSWERED')}\n          >\n            Answered\n          </FilterToggle>\n        </FilterWrapper>\n      </SectionHeader>\n      <PollList polls={polls} onClickPoll={onClickPoll} isHorizontal />\n    </Fragment>\n  );\n}\n\nPollsSection.propTypes = {\n  selectedFilter: propTypes.oneOf(['ALL', 'ANSWERED', 'UNANSWERED']),\n  onChangeFilter: propTypes.func,\n  onClickPoll: propTypes.func\n};\n\nPollsSection.defaultProps = {\n  selectedFilter: 'ALL',\n  onChangeFilter: () => {},\n  onClickPoll: () => {}\n};\n\nexport default PollsSection;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { Card, Label } from './index';\n\nconst isVertical = css`\n  margin-top: 12px;\n\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst Wrapper = styled(Card)`\n  padding: 12px;\n  min-width: 100px;\n  display: inline-flex;\n  flex-direction: column;\n  ${props => (props.isVertical ? isVertical : '')}\n`;\n\nconst PlayerInformationWrapper = styled.div`\n  display: flex;\n  border-bottom: 1px solid rgba(151, 151, 151, 0.1);\n  padding-bottom: 6px;\n  margin-bottom: 6px;\n`;\n\nconst PollStatisticsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ScoreInformationWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nconst ScoreWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: flex-end;\n  justify-content: center;\n`;\n\nconst PlayerName = styled.span`\n  margin-left: 6px;\n  color: #4a4a4a;\n  font-size: 16px;\n  font-weight: 600;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst ProfilePicture = styled.img`\n  height: 24px;\n  width: 24px;\n  border-radius: 12px;\n  object-fit: cover;\n`;\n\nconst ScoreNumber = styled.span`\n  color: #4a4a4a;\n  font-size: ${props => (props.big ? '24px' : '12px')};\n  font-weight: 600;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nexport default function PlayerScoreCard({\n  className,\n  playerName,\n  playerPicture,\n  pollsCreated,\n  pollsAnswered,\n  isVertical\n}) {\n  const [firstName] = playerName.split(' ');\n  return (\n    <Wrapper className={className} isVertical={isVertical}>\n      <PlayerInformationWrapper>\n        <ProfilePicture src={playerPicture} alt={playerName} />\n        <PlayerName>{firstName}</PlayerName>\n      </PlayerInformationWrapper>\n      <ScoreInformationWrapper>\n        <PollStatisticsWrapper>\n          <Label>Polls created</Label>\n          <ScoreNumber>{pollsCreated}</ScoreNumber>\n          <Label>Polls answered</Label>\n          <ScoreNumber>{pollsAnswered}</ScoreNumber>\n        </PollStatisticsWrapper>\n        <ScoreWrapper>\n          <Label>Score</Label>\n          <ScoreNumber big>{pollsAnswered + pollsCreated}</ScoreNumber>\n        </ScoreWrapper>\n      </ScoreInformationWrapper>\n    </Wrapper>\n  );\n}\n\nPlayerScoreCard.propTypes = {\n  playerName: propTypes.string.isRequired,\n  playerPicture: propTypes.string.isRequired,\n  pollsCreated: propTypes.number,\n  pollsAnswered: propTypes.number,\n  isVertical: propTypes.bool\n};\n\nPlayerScoreCard.defaultProps = {\n  pollsCreated: 0,\n  pollsAnswered: 0,\n  isVertical: false\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { Card } from './index';\n\nconst Wrapper = styled(Card)`\n  padding: 12px;\n  display: inline-block;\n`;\n\nconst Text = styled.span`\n  font-size: 16px;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nexport default function Answer({ className, children }) {\n  return (\n    <Wrapper className={className}>\n      <Text>{children}</Text>\n    </Wrapper>\n  );\n}\n\nAnswer.propTypes = {\n  children: propTypes.string.isRequired\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { Card } from './index';\n\nconst Wrapper = styled(Card)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 24px;\n  min-height: 235px;\n`;\n\nconst Input = styled.input`\n  height: 22px;\n  font-size: 18px;\n  font-family: 'Open Sans', sans-serif;\n  font-weight: 300;\n  border: 1px solid rgba(74, 74, 74, 0.3);\n  flex: 1;\n  padding: 6px 12px;\n`;\n\nexport default function QuestionInput({ onChange, placeholder, value }) {\n  return (\n    <Wrapper>\n      <Input onChange={onChange} placeholder={placeholder} value={value} />\n    </Wrapper>\n  );\n}\n\nQuestionInput.propTypes = {\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  value: propTypes.string\n};\n\nQuestionInput.defaultProps = {\n  onChange: () => {}\n};\n","import React from 'react';\nimport * as propTypes from 'prop-types';\n\nimport addIcon from '../icons/add.svg';\nimport { FloatingActionButton } from './index';\n\nexport default function AddQuestionButton({ className, onClick }) {\n  return (\n    <FloatingActionButton\n      className={className}\n      icon={addIcon}\n      onClick={onClick}\n    />\n  );\n}\n\nAddQuestionButton.propTypes = {\n  onClick: propTypes.func,\n  className: propTypes.string\n};\n\nAddQuestionButton.defaultProps = {\n  onClick: () => {}\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { PollList, Poll, SectionTitle, SectionLabel } from './index';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AlignedSectionTitle = styled(SectionTitle)`\n  align-self: flex-start;\n`;\n\nconst ViewPollsClickableWrapper = styled.button`\n  display: flex;\n  background: none;\n  border: none;\n  outline: none;\n  justify-content: center;\n  align-items: flex-end;\n  &:hover {\n    outline: none;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default function LatestPollsSection({\n  polls,\n  onClickViewPolls,\n  onClickPoll\n}) {\n  return (\n    <Wrapper>\n      <SectionHeader>\n        <AlignedSectionTitle>Latest Polls</AlignedSectionTitle>\n        <ViewPollsClickableWrapper onClick={onClickViewPolls}>\n          <SectionLabel>See more</SectionLabel>\n        </ViewPollsClickableWrapper>\n      </SectionHeader>\n      <PollList polls={polls} onClickPoll={onClickPoll} isHorizontal />\n    </Wrapper>\n  );\n}\n\nLatestPollsSection.propTypes = {\n  polls: propTypes.arrayOf(propTypes.shape(Poll.propTypes)).isRequired,\n  onClickViewPolls: propTypes.func,\n  onClickPoll: propTypes.func\n};\n\nLatestPollsSection.defaultProps = {\n  onClickViewPolls: () => {},\n  onClickPoll: () => {}\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport {\n  HorizontalList,\n  PlayerScoreCard,\n  SectionLabel,\n  SectionTitle\n} from './index';\nimport scoreboardIcon from '../icons/scoreboard.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledPlayerScoreCard = styled(PlayerScoreCard)`\n  margin-left: 12px;\n  min-width: 150px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nconst AlignedSectionTitle = styled(SectionTitle)`\n  align-self: flex-start;\n`;\n\nconst ViewScoreboardClickableWrapper = styled.button`\n  display: flex;\n  background: none;\n  border: none;\n  outline: none;\n  justify-content: center;\n  align-items: flex-end;\n  &:hover {\n    outline: none;\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CenteredWrapper = styled.div`\n  flex-direction: column;\n  display: flex;\n  flex: 1;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(187, 187, 187, 0.1);\n  margin: 0 12px;\n  border-radius: 4px;\n  min-height: 100px;\n`;\n\nconst EmptyListTitle = styled.h4`\n  font-family: 'Open Sans', sans-serif;\n  font-size: 12px;\n  margin: 0;\n  color: #8a8a8a;\n`;\n\nconst EmptySection = () => (\n  <CenteredWrapper>\n    <img src={scoreboardIcon} alt=\"Scoreboard\" />\n    <EmptyListTitle>No players found</EmptyListTitle>\n  </CenteredWrapper>\n);\n\nexport default function TopPlayersSection({ players, onClickOpenLeaderboard }) {\n  const isEmpty = players.length === 0;\n\n  return (\n    <Wrapper>\n      <SectionHeader>\n        <AlignedSectionTitle>Top players</AlignedSectionTitle>\n        <ViewScoreboardClickableWrapper onClick={onClickOpenLeaderboard}>\n          <SectionLabel>See leaderboard</SectionLabel>\n        </ViewScoreboardClickableWrapper>\n      </SectionHeader>\n      {isEmpty ? (\n        <EmptySection />\n      ) : (\n        <HorizontalList>\n          {players.map(p => (\n            <StyledPlayerScoreCard key={p.id} {...p} />\n          ))}\n        </HorizontalList>\n      )}\n    </Wrapper>\n  );\n}\n\nTopPlayersSection.propTypes = {\n  players: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      ...PlayerScoreCard.propTypes\n    })\n  ).isRequired,\n  onClickOpenLeaderboard: propTypes.func\n};\n\nTopPlayersSection.defaultProps = {\n  onClickOpenLeaderboard: () => {}\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport downArrowIcon from '../icons/down-arrow.svg';\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  padding: 0 12px;\n  width: 280px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\n  color: #fff;\n  outline: none;\n  height: 48px;\n  margin-top: 16px;\n  font-size: 16px;\n  border-radius: 4px;\n  background-color: #55b000;\n\n  &:hover,\n  &:active {\n    outline: none;\n  }\n`;\n\nconst SavedProfileList = styled.ul`\n  padding: 0;\n  list-style: none;\n  position: absolute;\n  width: 100%;\n  max-width: 280px;\n  transform: translate3d(0, 32px, 0);\n`;\n\nconst SavedProfileListItem = styled.li`\n  height: 48px;\n  border: 1px solid #dadada;\n  border-top: 0;\n  &:first-child {\n    border-top: 1px solid #dadada;\n  }\n  background: #fff;\n  color: #000;\n`;\n\nconst SavedProfile = styled.button`\n  height: 48px;\n  background: none;\n  border: none;\n  width: 100%;\n  text-align: left;\n`;\n\nconst SelectProfileButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: auto;\n  height: 100%;\n  background: transparent;\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n  outline: none;\n  border: none;\n  &:hover,\n  &:active {\n    outline: none;\n  }\n`;\n\nconst ConfirmProfileButton = styled.button`\n  margin-left: auto;\n  font-size: 16px;\n  font-family: 'Open Sans', sans-serif;\n  height: 100%;\n  flex: 1;\n  background: transparent;\n  border: none;\n  color: #fff;\n  outline: none;\n  &:hover,\n  &:active {\n    outline: none;\n  }\n`;\n\nexport default function ChooseProfileButton({\n  onClick,\n  defaultProfile,\n  savedProfiles\n}) {\n  const hasSavedProfiles = savedProfiles.length > 0;\n  const [selectedProfile, setSelectProfile] = useState(defaultProfile);\n  const [isShowingSavedProfiles, setIsShowingSavedProfiles] = useState(false);\n\n  return (\n    <Wrapper>\n      <ConfirmProfileButton onClick={() => onClick(selectedProfile.id)}>\n        Continue as <strong>{selectedProfile.playerName}</strong>\n      </ConfirmProfileButton>\n      {hasSavedProfiles && (\n        <SelectProfileButton onClick={() => setIsShowingSavedProfiles(true)}>\n          <img src={downArrowIcon} alt=\"select a profile\" />\n        </SelectProfileButton>\n      )}\n      {isShowingSavedProfiles ? (\n        <SavedProfileList>\n          {savedProfiles.map(sp => (\n            <SavedProfileListItem key={sp.id}>\n              <SavedProfile\n                onClick={() => {\n                  setIsShowingSavedProfiles(false);\n                  setSelectProfile(sp);\n                }}\n              >\n                {sp.playerName}\n              </SavedProfile>\n            </SavedProfileListItem>\n          ))}\n        </SavedProfileList>\n      ) : null}\n    </Wrapper>\n  );\n}\n\nChooseProfileButton.propTypes = {\n  onClick: propTypes.func,\n  defaultProfile: propTypes.shape({\n    id: propTypes.string.isRequired,\n    playerName: propTypes.string.isRequired,\n    playerPicture: propTypes.string.isRequired\n  }).isRequired,\n  savedProfiles: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      playerName: propTypes.string.isRequired,\n      playerPicture: propTypes.string.isRequired\n    })\n  )\n};\n\nChooseProfileButton.defaultProps = {\n  onClick: () => {},\n  savedProfiles: []\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport helpIcon from '../icons/help.svg';\n\nconst Wrapper = styled.button`\n  display: flex;\n  height: 56px;\n  width: 56px;\n  align-items: center;\n  justify-content: center;\n  background-color: #55b000;\n  border-radius: 56px;\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.5);\n  outline: none;\n  transition: all 100ms ease-in-out;\n  border: none;\n  &:hover {\n    outline: none;\n    transform: scale(0.9);\n  }\n`;\n\nconst Icon = styled.img`\n  height: 24px;\n  width: 24px;\n`;\n\nexport default function FloatingActionButton({\n  className,\n  onClick,\n  icon,\n  ...buttonProps\n}) {\n  return (\n    <Wrapper {...buttonProps} className={className} onClick={onClick}>\n      <Icon src={icon} alt=\"Add\" />\n    </Wrapper>\n  );\n}\n\nFloatingActionButton.propTypes = {\n  onClick: propTypes.func,\n  className: propTypes.string,\n  icon: propTypes.string\n};\n\nFloatingActionButton.defaultProps = {\n  onClick: () => {},\n  icon: helpIcon\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Separator = styled.span`\n  text-align: center;\n  font-size: 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SeparatorWrapper = styled.div`\n  color: rgba(0, 0, 0, 0.1);\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SeparatorSpan = styled.span`\n  margin: 0 4px;\n`;\n\nexport default function InputCardSeparator({ className }) {\n  return (\n    <SeparatorWrapper className={className}>\n      <Separator />\n      <SeparatorSpan>Or</SeparatorSpan>\n      <Separator />\n    </SeparatorWrapper>\n  );\n}\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { Card, InputCardSeparator } from './index';\n\nimport circleCheckIcon from '../icons/circle-check.svg';\n\nconst QuestionOption = styled(Card)`\n  background-color: ${({ isSelected }) =>\n    isSelected ? 'rgba(85, 176, 0, .3)' : '#fff'};\n  position: relative;\n`;\n\nconst Text = styled.span`\n  font-family: 'Open Sans', sans-serif;\n  font-size: 24px;\n  font-weight: lighter;\n`;\n\nconst QuestionOptionClickableContainer = styled.button`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  background: none;\n  border: none;\n  outline: none;\n  min-height: 235px;\n  width: 100%;\n  transition: all 100ms ease-in-out;\n  &:hover {\n    transform: scale(0.9);\n  }\n`;\n\nconst Icon = styled.img`\n  width: 24px;\n  height: 24px;\n  position: absolute;\n  top: 12px;\n  right: 12px;\n`;\n\nconst Separator = styled(InputCardSeparator)`\n  margin-bottom: 12px;\n`;\n\nexport default function Question({ options, optionSelected, onSelectOption }) {\n  const [option1, option2] = options;\n  const isOption1Selected = optionSelected === 0;\n  const isOption2Selected = optionSelected === 1;\n  const isAnswered = isOption1Selected || isOption2Selected;\n\n  return (\n    <Fragment>\n      <QuestionOption isSelected={isOption1Selected}>\n        {isOption1Selected && <Icon src={circleCheckIcon} />}\n        <QuestionOptionClickableContainer\n          onClick={() => onSelectOption(0)}\n          disabled={isAnswered}\n        >\n          <Text>{option1}?</Text>\n        </QuestionOptionClickableContainer>\n      </QuestionOption>\n      <Separator />\n      <QuestionOption isSelected={isOption2Selected}>\n        {isOption2Selected && <Icon src={circleCheckIcon} />}\n        <QuestionOptionClickableContainer\n          onClick={() => onSelectOption(1)}\n          disabled={isAnswered}\n        >\n          <Text>{option2}?</Text>\n        </QuestionOptionClickableContainer>\n      </QuestionOption>\n    </Fragment>\n  );\n}\n\nQuestion.propTypes = {\n  options: propTypes.arrayOf(propTypes.string).isRequired,\n  optionSelected: propTypes.number,\n  onSelectOption: propTypes.func\n};\n\nQuestion.defaultProps = {\n  onSelectOption: () => {}\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { SectionTitle, Answer } from './index';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledAnswer = styled(Answer)`\n  margin-top: 12px;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst AnswerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nexport default function MyAnswersSection({ answers }) {\n  return (\n    <Wrapper>\n      <SectionHeader>\n        <SectionTitle>My answers</SectionTitle>\n      </SectionHeader>\n      <AnswerWrapper>\n        {answers.map((a, index) => (\n          <StyledAnswer key={index}>{a}</StyledAnswer>\n        ))}\n      </AnswerWrapper>\n    </Wrapper>\n  );\n}\n\nMyAnswersSection.propTypes = {\n  answers: propTypes.arrayOf(propTypes.string)\n};\n\nMyAnswersSection.defaultProps = {\n  answers: []\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\n\nimport { HeaderDropdownMenu, Title } from './index';\n\nconst Wrapper = styled.div`\n  background-color: #fff;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  align-items: center;\n  padding: 0 24px;\n`;\n\nconst StyledSectionTitle = styled(Title)`\n  text-align: center;\n  flex: 1;\n`;\n\nexport default function Header({ title, user, onLogOut }) {\n  return (\n    <Wrapper>\n      <StyledSectionTitle>{title}</StyledSectionTitle>\n      <HeaderDropdownMenu currentUser={user} onLogOut={onLogOut} />\n    </Wrapper>\n  );\n}\n\nHeader.propTypes = {\n  user: propTypes.shape({\n    playerName: propTypes.string.isRequired,\n    playerPicture: propTypes.string.isRequired\n  }),\n  title: propTypes.string,\n  onLogOut: propTypes.func\n};\n\nHeader.defaultProps = {\n  title: 'Header'\n};\n\nHeader.defaultProps = {\n  onLogOut: () => {}\n};\n","import React, { Fragment } from 'react';\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as propTypes from 'prop-types';\n\nimport { selectProfileAction } from '../actions';\nimport { SelectProfileDropdownMenu } from '../components';\n\nconst Wrapper = styled.div`\n  padding: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  font-family: 'Open Sans', sans-serif;\n  font-weight: lighter;\n  font-size: 36px;\n  color: #000000;\n  text-align: center;\n  margin: 0;\n`;\n\nconst SubTitle = styled.h4`\n  font-family: 'Open Sans', sans-serif;\n  font-weight: normal;\n  color: #9b9b9b;\n  margin: 0;\n`;\n\nfunction SignInPage({ savedProfiles, onSelectProfile, isAuthenticated }) {\n  return (\n    <Fragment>\n      {isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Wrapper>\n          <Title>Would you rather?</Title>\n          <SubTitle>A fun game to play with friends</SubTitle>\n          <SelectProfileDropdownMenu\n            onProfileSelected={onSelectProfile}\n            profiles={savedProfiles}\n          />\n        </Wrapper>\n      )}\n    </Fragment>\n  );\n}\n\nSignInPage.propTypes = {\n  savedProfiles: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      playerName: propTypes.string.isRequired,\n      playerPicture: propTypes.string.isRequired\n    })\n  ),\n  onSelectProfile: propTypes.func.isRequired,\n  isAuthenticated: propTypes.bool\n};\n\nSignInPage.defaultProps = {\n  savedProfiles: [],\n  isAuthenticated: false\n};\n\nconst mapStateToProps = ({ authentication }) => ({\n  selectedProfile: authentication.selectedProfile,\n  savedProfiles: Object.values(authentication.savedProfiles),\n  isAuthenticated: !!authentication.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSelectProfile: id => dispatch(selectProfileAction(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignInPage);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setHeaderAction } from './actions';\n\nexport const useHeader = title => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setHeaderAction(title));\n  }, [title, dispatch]);\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport * as uuid from 'uuid';\nimport { addNewPollAction } from '../actions';\n\nimport { Card, FloatingActionButton } from '../components';\nimport { useHeader } from '../hooks';\nimport { withHeader } from './index';\n\nimport checkIcon from '../icons/check.svg';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 12px;\n`;\n\nconst disabledButton = css`\n  background: rgba(0, 0, 0, 0.1);\n  cursor: not-allowed;\n  box-shadow: none;\n\n  &:hover,\n  &:active {\n    transform: none;\n  }\n`;\n\nconst SaveNewPollButton = styled(FloatingActionButton)`\n  position: absolute;\n  right: 24px;\n  bottom: 24px;\n  ${props => props.disabled && disabledButton}\n`;\n\nconst InputWrapper = styled(Card)`\n  display: flex;\n  padding: 0 12px;\n  min-height: 235px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 12px;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst OptionInput = styled.input`\n  height: 56px;\n  font-size: 18px;\n  padding: 0 12px;\n  font-family: 'Open Sans', sans-serif;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  width: 100%;\n`;\n\nconst Separator = styled.span`\n  text-align: center;\n  font-size: 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SeparatorWrapper = styled.div`\n  color: rgba(0, 0, 0, 0.1);\n  margin-top: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SeparatorSpan = styled.span`\n  margin: 0 4px;\n`;\n\nfunction AddNewPollPage({ currentUser, onAddNewPoll }) {\n  const [optionA, setOptionA] = useState('');\n  const [optionB, setOptionB] = useState('');\n  const isValidPoll = optionA && optionB;\n\n  useHeader('New poll');\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <OptionInput\n          placeholder=\"Option A\"\n          value={optionA}\n          onChange={e => setOptionA(e.target.value)}\n        />\n      </InputWrapper>\n      <SeparatorWrapper>\n        <Separator />\n        <SeparatorSpan>Or</SeparatorSpan>\n        <Separator />\n      </SeparatorWrapper>\n      <InputWrapper>\n        <OptionInput\n          placeholder=\"Option B\"\n          value={optionB}\n          onChange={e => setOptionB(e.target.value)}\n        />\n      </InputWrapper>\n      <SaveNewPollButton\n        icon={checkIcon}\n        disabled={!isValidPoll}\n        onClick={() => {\n          const newPoll = {\n            id: uuid.v4(),\n            creationDate: Date.now(),\n            createdBy: currentUser.id,\n            options: [optionA, optionB]\n          };\n\n          onAddNewPoll(newPoll);\n\n          setOptionA('');\n          setOptionB('');\n        }}\n      />\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = ({ authentication }) => ({\n  currentUser: authentication.currentUser\n});\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onAddNewPoll: newPoll => {\n    dispatch(addNewPollAction(newPoll));\n    history.push('/');\n  }\n});\n\nexport default withHeader(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddNewPollPage)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport * as r from 'ramda';\n\nimport { selectOptionAction } from '../actions';\nimport { Label, Poll, Question } from '../components';\nimport { useHeader } from '../hooks';\nimport { withHeader } from './index';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n`;\n\nconst StyledLabel = styled(Label)`\n  color: #0a0a0a;\n  margin-top: 12px;\n  font-size: 12px;\n  margin-left: auto;\n`;\n\nfunction PollDetailPage({\n  poll,\n  onSelectOption,\n  optionSelected,\n  currentUser,\n  answerCount,\n  userCount\n}) {\n  useHeader('Would you rather...');\n\n  const answerRate = (answerCount / userCount).toFixed(2) * 100;\n\n  return (\n    <Wrapper>\n      <Question\n        options={poll.options}\n        onSelectOption={index => onSelectOption(index, currentUser.id)}\n        optionSelected={optionSelected}\n      />\n      <StyledLabel>\n        Answered by {answerCount} out of {userCount} ({answerRate}%) of users\n      </StyledLabel>\n    </Wrapper>\n  );\n}\n\nPollDetailPage.propTypes = {\n  poll: propTypes.shape(Poll.propTypes)\n};\n\nconst mapStateToProps = ({ polls, authentication }) => {\n  return {\n    poll: {\n      ...polls.all[polls.selected],\n      createdBy:\n        authentication.savedProfiles[polls.all[polls.selected].createdBy]\n    },\n    optionSelected: r.pathOr(\n      null,\n      ['all', polls.selected, 'answers', authentication.currentUser.id],\n      polls\n    ),\n    currentUser: authentication.currentUser,\n    userCount: Object.values(authentication.savedProfiles).length,\n    answerCount: Object.values(polls.all[polls.selected].answers).length\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onSelectOption: (index, user) => {\n    dispatch(selectOptionAction(index, user));\n    history.goBack();\n  }\n});\n\nexport default withHeader(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PollDetailPage)\n);\n","import { connect } from 'react-redux';\n\nimport { logOutAction } from '../actions';\nimport { Header } from '../components';\n\nconst mapStateToProps = ({ page, authentication }) => ({\n  user: authentication.currentUser,\n  title: page.current\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onLogOut: () => dispatch(logOutAction())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as propTypes from 'prop-types';\nimport * as r from 'ramda';\n\nimport { selectPollAction } from '../actions';\n\nimport {\n  LatestPollsSection,\n  TopPlayersSection,\n  MyAnswersSection\n} from '../components';\nimport { useHeader } from '../hooks';\nimport {\n  FloatingAddQuestionButton,\n  withHeader,\n  ConnectedPollsList\n} from './index';\n\nconst Wrapper = styled.div`\n  padding: 0 24px 24px 24px;\n`;\n\nfunction HomePage({\n  topPlayers,\n  latestPolls,\n  onOpenPoll,\n  currentUserAnswers,\n  onOpenLeaderboard,\n  onOpenPolls,\n  history\n}) {\n  useHeader('Home');\n\n  return (\n    <Wrapper>\n      <TopPlayersSection\n        players={topPlayers}\n        onClickOpenLeaderboard={onOpenLeaderboard}\n      />\n      <ConnectedPollsList history={history} />\n      <FloatingAddQuestionButton history={history} />\n      <MyAnswersSection answers={currentUserAnswers} />\n    </Wrapper>\n  );\n}\n\nHomePage.propTypes = {\n  history: propTypes.shape({\n    push: propTypes.func.isRequired\n  }),\n  topPlayers: TopPlayersSection.propTypes.players,\n  latestPolls: LatestPollsSection.propTypes.polls,\n  onOpenPoll: propTypes.func,\n  onOpenLeaderboard: propTypes.func,\n  onOpenPolls: propTypes.func\n};\n\nconst mapStateToProps = state => ({\n  topPlayers: state.topPlayers.map(tp => ({\n    ...tp,\n    createdBy: state.authentication.savedProfiles[tp.id]\n  })),\n  latestPolls: state.latestPolls.map(lp => ({\n    ...lp,\n    createdBy: state.authentication.savedProfiles[lp.createdBy]\n  })),\n  currentUserAnswers: r.pipe(\n    r.prop('answers'),\n    r.filter(r.propEq('userId', state.authentication.selectedProfile)),\n    r.sort(r.descend(r.prop('creationDate'))),\n    r.map(r.prop('answer'))\n  )(state)\n});\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onOpenPoll: poll => {\n    dispatch(selectPollAction(poll.id));\n    history.push(`/questions/${poll.id}`);\n  },\n  onOpenLeaderboard: () => {\n    history.push('/leaderboard');\n  },\n  onOpenPolls: () => {\n    history.push('/questions');\n  }\n});\n\nexport default withHeader(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(HomePage)\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as r from 'ramda';\n\nimport { PlayerScoreCard } from '../components';\n\nimport { useHeader } from '../hooks';\nimport { withHeader } from './index';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n`;\n\nfunction LeaderboardPage({ scores }) {\n  useHeader('Leaderboard');\n\n  return (\n    <Wrapper>\n      {scores.map(s => (\n        <PlayerScoreCard key={s.id} {...s} isVertical />\n      ))}\n    </Wrapper>\n  );\n}\n\nLeaderboardPage.propTypes = {\n  scores: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      ...PlayerScoreCard.propTypes\n    })\n  )\n};\n\nconst calculateScore = s => s.pollsAnswered + s.pollsCreated;\n\nconst mapStateToProps = ({ scoreboard }) => ({\n  scores: r.pipe(\n    r.values,\n    r.sort(r.descend(calculateScore))\n  )(scoreboard)\n});\n\nexport default withHeader(connect(mapStateToProps)(LeaderboardPage));\n","import React from 'react';\nimport * as propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as r from 'ramda';\nimport { selectPollAction } from '../actions';\n\nimport { Poll, PollList } from '../components';\nimport { useHeader } from '../hooks';\nimport { FloatingAddQuestionButton, withHeader } from './index';\n\nPollsPage.propTypes = {\n  polls: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      ...Poll.propTypes\n    })\n  ),\n  onOpenPoll: propTypes.func\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n`;\n\nfunction PollsPage({ polls, onOpenPoll, history }) {\n  useHeader('Polls');\n\n  return (\n    <Wrapper>\n      <PollList polls={polls} onClickPoll={onOpenPoll} />\n      <FloatingAddQuestionButton history={history} />\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = ({ polls, authentication }) => ({\n  polls: r.pipe(\n    r.prop('all'),\n    r.values,\n    r.sort(r.descend(r.prop('creationDate'))),\n    r.map(\n      r.evolve({\n        createdBy: id => authentication.savedProfiles[id]\n      })\n    )\n  )(polls)\n});\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onOpenPoll: poll => {\n    dispatch(selectPollAction(poll.id));\n    history.push(`/questions/${poll.id}`);\n  },\n  onAddNewPoll: () => {}\n});\n\nexport default withHeader(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PollsPage)\n);\n","import { connect } from 'react-redux';\nimport * as r from 'ramda';\n\nimport { changeFilterAction, selectPollAction } from '../actions';\nimport { PollsSection } from '../components';\n\nconst isAnsweredBy = userId => r.hasPath(['answers', userId]);\nconst isNotAnsweredBy = userId =>\n  r.pipe(\n    r.hasPath(['answers', userId]),\n    r.not\n  );\nconst inflateUserProfile = profiles => p => ({\n  ...p,\n  createdBy: profiles[p.createdBy]\n});\nconst mapStateToProps = ({ polls, authentication }) => ({\n  polls: r.pipe(\n    r.filter(\n      polls.selectedFilter === 'ANSWERED'\n        ? isAnsweredBy(authentication.currentUser.id)\n        : isNotAnsweredBy(authentication.currentUser.id)\n    ),\n    r.values,\n    r.map(inflateUserProfile(authentication.savedProfiles)),\n    r.sort(r.descend(r.prop('creationDate')))\n  )(polls.all),\n  selectedFilter: polls.selectedFilter\n});\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onChangeFilter: filter => dispatch(changeFilterAction(filter)),\n  onClickPoll: poll => {\n    dispatch(selectPollAction(poll.id));\n    history.push(`/questions/${poll.id}`);\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PollsSection);\n","import { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { AddQuestionButton } from '../components';\n\nconst FloatingAddQuestionButton = styled(AddQuestionButton)`\n  position: fixed;\n  bottom: 24px;\n  right: 24px;\n`;\n\nFloatingAddQuestionButton.propTypes = AddQuestionButton.propTypes;\n\nconst mapDispatchToProps = (dispatch, { history }) => ({\n  onClick: () => {\n    history.push('/add');\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(FloatingAddQuestionButton);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\nimport { RotateLoader } from 'react-spinners';\nimport styled from 'styled-components';\n\nimport {\n  AddNewPollPage,\n  HomePage,\n  LeaderboardPage,\n  PollDetailPage,\n  PollsPage,\n  PrivateRoute,\n  SignInPage\n} from './index';\n\nfunction NotFound() {\n  return <h1>Not Found</h1>;\n}\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  height: 100%;\n`;\n\nlet Router;\nif (process.env.NODE_ENV === 'production') {\n  Router = HashRouter;\n} else {\n  Router = BrowserRouter;\n}\n\nfunction AppContainer({ isInitialized }) {\n  return (\n    <Fragment>\n      {isInitialized ? (\n        <Router>\n          <Switch>\n            <Route component={SignInPage} path=\"/authenticate\" />\n            <PrivateRoute component={HomePage} path=\"/\" exact />\n            <PrivateRoute component={PollsPage} path=\"/questions\" exact />\n            <PrivateRoute component={AddNewPollPage} path=\"/add\" exact />\n            <PrivateRoute component={PollDetailPage} path=\"/questions/:id\" />\n            <PrivateRoute component={LeaderboardPage} path=\"/leaderboard\" />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      ) : (\n        <LoaderWrapper>\n          <RotateLoader loading={!isInitialized} color=\"#dadada\" />\n        </LoaderWrapper>\n      )}\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = ({ page }) => ({\n  isInitialized: page.isInitialized\n});\n\nexport default connect(mapStateToProps)(AppContainer);\n","import * as r from 'ramda';\n\nimport {\n  ADD_NEW_POLL,\n  ADD_NEW_USER,\n  ANSWER_POLL_SUCCESS,\n  RESET_SCOREBOARD\n} from '../actionTypes';\n\nconst INITIAL = {};\n\nexport default function scoreboardReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case RESET_SCOREBOARD:\n      return INITIAL;\n    case ADD_NEW_USER:\n      return {\n        ...state,\n        [action.payload.user.id]: {\n          ...action.payload.user,\n          pollsCreated: 0,\n          pollsAnswered: 0\n        }\n      };\n    case ADD_NEW_POLL:\n      return r.evolve(\n        {\n          [action.payload.poll.createdBy]: {\n            pollsCreated: r.add(1)\n          }\n        },\n        state\n      );\n    case ANSWER_POLL_SUCCESS:\n      return r.evolve(\n        {\n          [action.payload.userId]: {\n            pollsAnswered: r.add(1)\n          }\n        },\n        state\n      );\n    default:\n      return state;\n  }\n}\n","import { REFRESH_TOP_SCORES } from '../actionTypes';\n\nconst score = x => x.pollsCreated + x.pollsAnswered;\n\nexport default function topPlayersReducer(state = [], action) {\n  switch (action.type) {\n    case REFRESH_TOP_SCORES:\n      return Object.entries(action.payload.players)\n        .sort(([, a], [, b]) => score(b) - score(a))\n        .slice(0, 10)\n        .map(([, player]) => player);\n    default:\n      return state;\n  }\n}\n","import { REFRESH_LATEST_POLLS } from '../actionTypes';\n\nconst INITIAL = [];\n\nexport default function latestPollsReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case REFRESH_LATEST_POLLS:\n      return Object.entries(action.payload.polls)\n        .sort(([, a], [, b]) => b.creationDate - a.creationDate)\n        .slice(0, 10)\n        .map(([, poll]) => poll);\n    default:\n      return state;\n  }\n}\n","import * as r from 'ramda';\n\nimport {\n  ADD_NEW_POLL,\n  CHANGE_FILTER,\n  RESET_POLLS,\n  SELECT_OPTION,\n  SELECT_POLL,\n  SET_POLLS\n} from '../actionTypes';\n\nconst INITIAL = {\n  selected: null,\n  all: {},\n  selectedFilter: 'UNANSWERED'\n};\n\nexport default function pollsReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case RESET_POLLS:\n      return INITIAL;\n\n    case SET_POLLS:\n      return {\n        ...state,\n        all: action.payload.polls\n      };\n\n    case ADD_NEW_POLL:\n      return r.set(\n        r.lensPath(['all', action.payload.poll.id]),\n        action.payload.poll,\n        state\n      );\n\n    case SELECT_POLL:\n      return r.mergeDeepRight(state, { selected: action.payload });\n\n    case SELECT_OPTION:\n      return r.set(\n        r.lensPath(['all', state.selected, 'answers', action.payload.user]),\n        action.payload.option,\n        state\n      );\n\n    case CHANGE_FILTER:\n      return {\n        ...state,\n        selectedFilter: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SAVE_PROFILE,\n  LOGOUT,\n  SELECT_PROFILE,\n  SIGN_IN,\n  SET_USER_PROFILES\n} from '../actionTypes';\n\nexport const GUEST_PROFILE = {\n  id: 'guest-profile',\n  playerName: 'Guest',\n  playerPicture:\n    'https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?cs=srgb&dl=beautiful-brunette-cute-774909.jpg&fm=jpg&w=320'\n};\n\nconst INITIAL = {\n  selectedProfile: null,\n  currentUser: null,\n  savedProfiles: {}\n};\n\nexport default function authenticationReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case SAVE_PROFILE:\n      return {\n        ...state,\n        savedProfiles: {\n          ...state.savedProfiles,\n          [action.payload.profile.id]: action.payload.profile\n        }\n      };\n    case SELECT_PROFILE:\n      return {\n        ...state,\n        selectedProfile: action.payload.id\n      };\n    case SIGN_IN:\n      return {\n        ...state,\n        currentUser: action.payload.user\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        selectedProfile: null,\n        currentUser: null\n      };\n\n    case SET_USER_PROFILES:\n      return {\n        ...state,\n        savedProfiles: {\n          ...action.payload.profiles,\n          [GUEST_PROFILE.id]: GUEST_PROFILE\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import * as r from 'ramda';\n\nimport { ANSWER_POLL_SUCCESS } from '../actionTypes';\n\nconst INITIAL = [];\n\nexport default function answersReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case ANSWER_POLL_SUCCESS:\n      const { userId, poll, selectedOption } = action.payload;\n      const [option1, option2] = poll.options;\n      const [selected, notSelected] =\n        selectedOption === 0 ? [option1, option2] : [option2, option1];\n      const answer = [\"I'd rather\", selected, 'over', notSelected].join(' ');\n\n      return r.pipe(\n        r.append({ userId, answer, creationDate: Date.now() }),\n        r.sortBy(r.prop('creationDate'))\n      )(state);\n    default:\n      return state;\n  }\n}\n","import { SET_HEADER, FINISH_LOADING } from '../actionTypes';\n\nconst INITIAL = {\n  current: null,\n  isInitialized: false,\n};\n\nexport default function pageReducer(state = INITIAL, action) {\n  switch (action.type) {\n    case SET_HEADER:\n      return { ...state, current: action.payload };\n\n    case FINISH_LOADING:\n      return { ...state, isInitialized: true };\n\n    default:\n      return state;\n  }\n}\n","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://placekitten.com/300',\n    answers: {\n      '8xf0y6ziyjabvozdd253nd': 'optionOne',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo',\n      am8ehyc8byjqgar0jgpub9: 'optionTwo',\n      loxhs1bqm25b708cmbf3g: 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://placekitten.com/400',\n    answers: {\n      vthrdm985a262al8qx3do: 'optionOne',\n      xj352vofupe1dqz9emx13r: 'optionTwo'\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do']\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://placekitten.com/500',\n    answers: {\n      xj352vofupe1dqz9emx13r: 'optionOne',\n      vthrdm985a262al8qx3do: 'optionTwo',\n      '6ni6ok3ym7mf1p33lnez': 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r']\n  }\n};\n\nlet questions = {\n  '8xf0y6ziyjabvozdd253nd': {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory'\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  '6ni6ok3ym7mf1p33lnez': {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero'\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic'\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer'\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  vthrdm985a262al8qx3do: {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself'\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript'\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  }\n};\n\nfunction generateUID() {\n  return (\n    Math.random()\n      .toString(36)\n      .substring(2, 15) +\n    Math.random()\n      .toString(36)\n      .substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText\n    }\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import * as r from 'ramda';\n\nimport { _getQuestions, _getUsers, _saveQuestion } from './_DATA';\n\nconst mapApiQuestionVotesToAppPollAnswers = (option, votes) =>\n  r.fromPairs(votes.map(v => [v, option]));\n\nconst mapApiQuestionToAppPoll = ({\n  id,\n  author,\n  optionOne,\n  optionTwo,\n  timestamp\n}) => ({\n  id,\n  createdBy: author,\n  options: [optionOne.text, optionTwo.text],\n  creationDate: timestamp,\n  answers: r.mergeDeepRight(\n    mapApiQuestionVotesToAppPollAnswers(0, optionOne.votes),\n    mapApiQuestionVotesToAppPollAnswers(1, optionTwo.votes)\n  )\n});\n\nexport const addNewPoll = async ({ authorId, options: [option1, option2] }) =>\n  _saveQuestion({\n    author: authorId,\n    optionOneText: option1,\n    optionTwoText: option2\n  }).then(mapApiQuestionToAppPoll);\n\nexport const getPolls = async () =>\n  _getQuestions()\n    .then(r.values)\n    .then(r.map(mapApiQuestionToAppPoll))\n    .then(r.map(p => [p.id, p]))\n    .then(r.fromPairs);\n\nconst mapApiUserToAppUserProfile = ({ id, name, avatarURL }) => ({\n  id,\n  playerName: name,\n  playerPicture: avatarURL\n});\n\nexport const getUserProfiles = async () =>\n  _getUsers().then(r.map(mapApiUserToAppUserProfile));\n","import { all, call, put, select, takeEvery } from 'redux-saga/effects';\n\nimport {\n  addNewPollAction,\n  addNewUserAction,\n  answerPollSuccessAction,\n  finishInitializationAction,\n  refreshLatestPollsAction,\n  refreshTopScoresAction,\n  saveProfileAction,\n  signInAction\n} from './actions';\nimport {\n  ADD_NEW_POLL,\n  ADD_NEW_USER,\n  SELECT_OPTION,\n  SELECT_PROFILE,\n  SET_POLLS,\n  SET_USER_PROFILES\n} from './actionTypes';\nimport * as api from './api';\nimport { GUEST_PROFILE } from './reducers/authenticationReducer';\n\nexport function* initialSaga() {\n  yield put(saveProfileAction(GUEST_PROFILE));\n  yield put(addNewUserAction(GUEST_PROFILE));\n  yield fetchInitialUserProfilesSaga();\n  yield fetchInitialPollsSaga();\n\n  yield put(finishInitializationAction());\n}\n\nexport function* refreshTopScoresSaga() {\n  const players = yield select(state => state.scoreboard);\n\n  yield put(refreshTopScoresAction(players));\n}\n\nexport function* refreshLatestPollsSaga() {\n  const polls = yield select(state => state.polls.all);\n\n  yield put(refreshLatestPollsAction(polls));\n}\n\nexport function* fetchInitialPollsSaga() {\n  const polls = yield call(api.getPolls);\n\n  for (const poll of Object.values(polls)) {\n    yield put(addNewPollAction(poll));\n\n    for (const [userId, answer] of Object.entries(poll.answers)) {\n      yield put(\n        answerPollSuccessAction({ selectedOption: answer, userId, poll })\n      );\n    }\n  }\n}\n\nexport function* fetchInitialUserProfilesSaga() {\n  const profiles = yield call(api.getUserProfiles);\n\n  for (const profile of Object.values(profiles)) {\n    yield put(saveProfileAction(profile));\n    yield put(addNewUserAction(profile));\n  }\n}\n\nexport function* signInSaga() {\n  const { selectedProfile, savedProfiles } = yield select(\n    state => state.authentication\n  );\n  const currentUser = savedProfiles[selectedProfile];\n\n  yield put(signInAction(currentUser));\n}\n\nexport function* watchAddNewUserSaga() {\n  yield takeEvery(ADD_NEW_USER, refreshTopScoresSaga);\n}\n\nexport function* watchAddNewPoll() {\n  yield takeEvery(ADD_NEW_POLL, refreshLatestPollsSaga);\n  yield takeEvery(ADD_NEW_POLL, refreshTopScoresSaga);\n}\n\nexport function* watchSelectProfile() {\n  yield takeEvery(SELECT_PROFILE, signInSaga);\n}\n\nexport function* watchSetPolls() {\n  yield takeEvery(SET_POLLS, refreshLatestPollsSaga);\n}\n\nexport function* watchSetUserProfiles() {\n  yield takeEvery(SET_USER_PROFILES, refreshTopScoresSaga);\n}\n\nexport function* addAnswerToScoreSaga({ payload }) {\n  const { option } = payload;\n  const { polls, selectedPollId, currentUserId } = yield select(s => ({\n    polls: s.polls.all,\n    selectedPollId: s.polls.selected,\n    currentUserId: s.authentication.selectedProfile\n  }));\n\n  yield put(\n    answerPollSuccessAction({\n      selectedOption: option,\n      poll: polls[selectedPollId],\n      userId: currentUserId\n    })\n  );\n\n  yield refreshTopScoresSaga();\n}\n\nexport function* watchSelectOption() {\n  yield takeEvery(SELECT_OPTION, addAnswerToScoreSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchAddNewUserSaga(),\n    watchAddNewPoll(),\n    watchSelectProfile(),\n    watchSelectOption(),\n    watchSetPolls(),\n    watchSetUserProfiles(),\n    initialSaga()\n  ]);\n}\n","import {\n  createStore as createRootStore,\n  combineReducers,\n  applyMiddleware,\n  compose\n} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport scoreboardReducer from './scoreboardReducer';\nimport topPlayersReducer from './topPlayersReducer';\nimport latestPollsReducer from './latestPollsReducer';\nimport pollsReducer from './pollsReducer';\nimport authenticationReducer from './authenticationReducer';\nimport answersReducer from './answersReducer';\nimport pageReducer from './pageReducer';\n\nimport rootSaga from '../sagas';\n\nexport const createStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createRootStore(\n    combineReducers({\n      scoreboard: scoreboardReducer,\n      topPlayers: topPlayersReducer,\n      polls: pollsReducer,\n      latestPolls: latestPollsReducer,\n      authentication: authenticationReducer,\n      answers: answersReducer,\n      page: pageReducer\n    }),\n    compose(\n      applyMiddleware(sagaMiddleware),\n      applyMiddleware(createLogger())\n    )\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return { store };\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppContainer } from './containers';\nimport { createStore } from './reducers';\n\nconst { store } = createStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/circle-check.bf513257.svg\";","module.exports = __webpack_public_path__ + \"static/media/polls.cbd8b5a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.461c9f24.svg\";","module.exports = __webpack_public_path__ + \"static/media/scoreboard.91da6053.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.dfa63953.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.4fcf3fc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.71070825.svg\";"],"sourceRoot":""}